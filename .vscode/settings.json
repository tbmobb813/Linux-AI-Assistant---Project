// .vscode/settings.json
// VS Code workspace settings for the project
{
  "editor.formatOnSave": true,
  "editor.defaultFormatter": null,
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": "explicit"
  },
  "[rust]": {
    "editor.defaultFormatter": "rust-lang.rust-analyzer",
    "editor.formatOnSave": true
  },
  "[typescript]": {
    "editor.defaultFormatter": null
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": null
  },
  "rust-analyzer.checkOnSave.command": "clippy",
  "rust-analyzer.cargo.features": "all",
  "typescript.tsdk": "node_modules/typescript/lib",
  "typescript.enablePromptUseWorkspaceTsdk": true,
  "files.associations": {
    "*.rs": "rust"
  },
  "search.exclude": {
    "**/node_modules": true,
    "**/target": true,
    "**/dist": true
  },
  "files.watcherExclude": {
    "**/target/**": true,
    "**/node_modules/**": true
  }
}

// .vscode/extensions.json
// Recommended VS Code extensions
{
  "recommendations": [
    "rust-lang.rust-analyzer",
    "tauri-apps.tauri-vscode",
    "esbenp.prettier-vscode",
    "dbaeumer.vscode-eslint",
    "bradlc.vscode-tailwindcss",
    "dsznajder.es7-react-js-snippets",
    "usernamehw.errorlens",
    "eamodio.gitlens",
    "christian-kohler.path-intellisense",
    "ms-vscode.vscode-typescript-next"
  ]
}

// .vscode/launch.json
// Debug configurations
{
  "version": "0.2.0",
  "configurations": [
    {
      "type": "lldb",
      "request": "launch",
      "name": "Tauri Development Debug",
      "cargo": {
        "args": [
          "build",
          "--manifest-path=./src-tauri/Cargo.toml",
          "--no-default-features"
        ]
      },
      "preLaunchTask": "ui:dev"
    },
    {
      "type": "lldb",
      "request": "launch",
      "name": "Tauri Production Debug",
      "cargo": {
        "args": [
          "build",
          "--release",
          "--manifest-path=./src-tauri/Cargo.toml"
        ]
      },
      "preLaunchTask": "ui:build"
    }
  ]
}

// .vscode/tasks.json
// Build tasks
{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "ui:dev",
      "type": "shell",
      "command": "npm run dev",
      "isBackground": true,
      "problemMatcher": []
    },
    {
      "label": "ui:build",
      "type": "shell",
      "command": "npm run build",
      "problemMatcher": []
    },
    {
      "label": "tauri:dev",
      "type": "shell",
      "command": "npm run tauri dev",
      "isBackground": true,
      "problemMatcher": []
    },
    {
      "label": "rust:check",
      "type": "shell",
      "command": "cargo check --manifest-path=./src-tauri/Cargo.toml",
      "problemMatcher": ["$rustc"]
    },
    {
      "label": "rust:test",
      "type": "shell",
      "command": "cargo test --manifest-path=./src-tauri/Cargo.toml",
      "problemMatcher": ["$rustc"]
    }
  ]
}

// .prettierrc
// Prettier configuration
{
  "semi": true,
  "trailingComma": "es5",
  "singleQuote": true,
  "printWidth": 100,
  "tabWidth": 2,
  "useTabs": false,
  "arrowParens": "always",
  "endOfLine": "lf"
}

// .eslintrc.cjs
// ESLint configuration
module.exports = {
  root: true,
  env: { browser: true, es2020: true },
  extends: [
    'eslint:recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:react-hooks/recommended',
  ],
  ignorePatterns: ['dist', '.eslintrc.cjs'],
  parser: '@typescript-eslint/parser',
  plugins: ['react-refresh'],
  rules: {
    'react-refresh/only-export-components': [
      'warn',
      { allowConstantExport: true },
    ],
    '@typescript-eslint/no-explicit-any': 'warn',
    '@typescript-eslint/no-unused-vars': ['warn', { argsIgnorePattern: '^_' }],
  },
}

// rust-toolchain.toml
// Rust toolchain version
[toolchain]
channel = "stable"
components = ["rustfmt", "clippy"]

// .editorconfig
// Editor configuration for consistency
root = true

[*]
charset = utf-8
end_of_line = lf
indent_style = space
indent_size = 2
insert_final_newline = true
trim_trailing_whitespace = true

[*.rs]
indent_size = 4

[*.md]
trim_trailing_whitespace = false

[Makefile]
indent_style = tab