name: CI

on:
  push:
    branches: [ main, master, chore/*, fix/*, feat/* ]
  pull_request:
    branches: [ main, master ]

jobs:
  checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-

      - name: Install JS dependencies
        run: npm ci

      - name: Prettier check (format)
        run: |
          cd linux-ai-assistant || exit 0
          npx prettier --check . || true

      - name: TypeScript check (frontend)
        run: |
          cd linux-ai-assistant
          npx tsc --noEmit

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Cache cargo registry and git
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Cargo fmt check (Tauri)
        run: |
          cargo fmt --version || true
          cargo fmt -- --check --manifest-path=linux-ai-assistant/src-tauri/Cargo.toml || true

      - name: Cargo clippy (Tauri)
        run: |
          cargo clippy --manifest-path=linux-ai-assistant/src-tauri/Cargo.toml -- -D warnings || true

      - name: Cargo check (Tauri)
        run: cargo check --manifest-path=linux-ai-assistant/src-tauri/Cargo.toml
name: CI

on:
  push:
    branches: [ main, 'fix/*' ]
  pull_request:
    branches: [ main ]

jobs:
  checks:
    name: TypeScript + Rust checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install frontend dependencies
        # repository layout moved frontend to repo root
        working-directory: .
        run: npm ci

      - name: TypeScript typecheck
        # run typecheck from repository root where tsconfig.json lives
        working-directory: .
        run: npx tsc --noEmit

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Cargo check
        # src-tauri is at the repository root now
        working-directory: src-tauri
        run: cargo check --workspace --all-targets
