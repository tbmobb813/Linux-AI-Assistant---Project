name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run tests & upload coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Use Node.js
        uses: actions/setup-node@v6
        with:
          # Restore Node 20 for compatibility with current test toolchain
          node-version: "20"

      - name: Setup pnpm (Corepack)
        run: |
          corepack enable
          corepack prepare pnpm@10.19.0 --activate

      - name: Install dependencies (pnpm, frozen lockfile)
        run: pnpm install --frozen-lockfile

      - name: TypeScript type checking
        run: pnpm --filter linux-ai-assistant run typecheck

      - name: Rust formatting check (CLI)
        run: |
          cd linux-ai-assistant/cli
          cargo fmt -- --check

      - name: Rust linting (clippy) (CLI)
        run: |
          cd linux-ai-assistant/cli
          cargo clippy -- -D warnings
      - name: Run tests with coverage (pnpm workspace, single-threaded + isolate)
        run: |
          set -o pipefail
          # Capture all output to a log file for post-mortem analysis and still return the original exit code
          pnpm --filter linux-ai-assistant run test:coverage -- --threads=false --isolate 2>&1 | tee linux-ai-assistant/test-debug.log
          exit ${PIPESTATUS[0]}

      - name: Upload vitest debug log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: vitest-debug-log
          path: linux-ai-assistant/test-debug.log

      - name: Upload coverage JSON
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: vitest-coverage-json
          path: linux-ai-assistant/coverage/coverage-final.json

      - name: Show coverage dir
        run: |
          echo "Coverage dir listing:"
          ls -la linux-ai-assistant/coverage || true
          echo "--- head of coverage-final.json ---"
          head -n 20 linux-ai-assistant/coverage/coverage-final.json || true

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: linux-ai-assistant/coverage/coverage-final.json
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
